/* Generated by Cython 3.0.0b1 */

#ifndef __PYX_HAVE__mcdp__exception
#define __PYX_HAVE__mcdp__exception

#include "Python.h"
struct McdpErrorObject;
struct McdpInitalizeErrorObject;
struct McdpRuntimeErrorObject;
struct McdpCompileErrorObject;
struct McdpValueErrorObjet;
struct McdpTypeErrorObject;
struct McdpIndexErrorObject;
struct McdpUnboundErrorObject;

/* "mcdp/exception.pxd":1
 * cdef api class McdpError(Exception) [object McdpErrorObject, type DpExc_BaseError, check_size ignore]:             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct McdpErrorObject {
  PyBaseExceptionObject __pyx_base;
};

/* "mcdp/exception.pxd":5
 * 
 * 
 * cdef api class McdpInitalizeError(McdpError) [object McdpInitalizeErrorObject, type DpExc_InitalizeError, check_size ignore]:             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct McdpInitalizeErrorObject {
  struct McdpErrorObject __pyx_base;
};

/* "mcdp/exception.pxd":9
 * 
 * 
 * cdef api class McdpRuntimeError(McdpError) [object McdpRuntimeErrorObject, type DpExc_RuntimeError, check_size ignore]:             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct McdpRuntimeErrorObject {
  struct McdpErrorObject __pyx_base;
};

/* "mcdp/exception.pxd":13
 * 
 * 
 * cdef api class McdpCompileError(McdpError) [object McdpCompileErrorObject, type DpExc_CompileError, check_size ignore]:             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct McdpCompileErrorObject {
  struct McdpErrorObject __pyx_base;
};

/* "mcdp/exception.pxd":17
 * 
 * 
 * cdef api class McdpValueError(McdpRuntimeError) [object McdpValueErrorObjet, type DpExc_ValueError, check_size ignore]:             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct McdpValueErrorObjet {
  struct McdpRuntimeErrorObject __pyx_base;
};

/* "mcdp/exception.pxd":21
 * 
 * 
 * cdef api class McdpTypeError(McdpRuntimeError) [object McdpTypeErrorObject, type DpExc_TypeError, check_size ignore]:             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct McdpTypeErrorObject {
  struct McdpRuntimeErrorObject __pyx_base;
};

/* "mcdp/exception.pxd":25
 * 
 * 
 * cdef api class McdpIndexError(McdpValueError) [object McdpIndexErrorObject, type DpExc_IndexError, check_size ignore]:             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct McdpIndexErrorObject {
  struct McdpValueErrorObjet __pyx_base;
};

/* "mcdp/exception.pxd":29
 * 
 * 
 * cdef api class McdpUnboundError(McdpRuntimeError) [object McdpUnboundErrorObject, type DpExc_UnboundError, check_size ignore]:             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct McdpUnboundErrorObject {
  struct McdpRuntimeErrorObject __pyx_base;
};

#ifndef __PYX_HAVE_API__mcdp__exception

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(_T) _T
#endif

#endif /* !__PYX_HAVE_API__mcdp__exception */

/* WARNING: the interface of the module init function changed in CPython 3.5. */
/* It now returns a PyModuleDef instance instead of a PyModule instance. */

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initexception(void);
#else
/* WARNING: Use PyImport_AppendInittab("exception", PyInit_exception) instead of calling PyInit_exception directly from Python 3.5 */
PyMODINIT_FUNC PyInit_exception(void);

#if PY_VERSION_HEX >= 0x03050000 && (defined(__GNUC__) || defined(__clang__) || defined(_MSC_VER) || (defined(__cplusplus) && __cplusplus >= 201402L))
#if defined(__cplusplus) && __cplusplus >= 201402L
[[deprecated("Use PyImport_AppendInittab(\"exception\", PyInit_exception) instead of calling PyInit_exception directly.")]] inline
#elif defined(__GNUC__) || defined(__clang__)
__attribute__ ((__deprecated__("Use PyImport_AppendInittab(\"exception\", PyInit_exception) instead of calling PyInit_exception directly."), __unused__)) __inline__
#elif defined(_MSC_VER)
__declspec(deprecated("Use PyImport_AppendInittab(\"exception\", PyInit_exception) instead of calling PyInit_exception directly.")) __inline
#endif
static PyObject* __PYX_WARN_IF_PyInit_exception_INIT_CALLED(PyObject* res) {
  return res;
}
#define PyInit_exception() __PYX_WARN_IF_PyInit_exception_INIT_CALLED(PyInit_exception())
#endif
#endif

#endif /* !__PYX_HAVE__mcdp__exception */
