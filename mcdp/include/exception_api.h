/* Generated by Cython 3.0.0a10 */

#ifndef __PYX_HAVE_API__mcdp__exception
#define __PYX_HAVE_API__mcdp__exception
#ifdef __MINGW64__
#define MS_WIN64
#endif
#include "Python.h"
#include "exception.h"

static PyTypeObject *__pyx_ptype_4mcdp_9exception_McdpError = 0;
#define DpExc_BaseError (*__pyx_ptype_4mcdp_9exception_McdpError)
static PyTypeObject *__pyx_ptype_4mcdp_9exception_McdpInitalizeError = 0;
#define DpExc_InitalizeError (*__pyx_ptype_4mcdp_9exception_McdpInitalizeError)
static PyTypeObject *__pyx_ptype_4mcdp_9exception_McdpRuntimeError = 0;
#define DpExc_RuntimeError (*__pyx_ptype_4mcdp_9exception_McdpRuntimeError)
static PyTypeObject *__pyx_ptype_4mcdp_9exception_McdpCompileError = 0;
#define DpExc_CompileError (*__pyx_ptype_4mcdp_9exception_McdpCompileError)
static PyTypeObject *__pyx_ptype_4mcdp_9exception_McdpValueError = 0;
#define DpExc_ValueError (*__pyx_ptype_4mcdp_9exception_McdpValueError)
static PyTypeObject *__pyx_ptype_4mcdp_9exception_McdpTypeError = 0;
#define DpExc_TypeError (*__pyx_ptype_4mcdp_9exception_McdpTypeError)
static PyTypeObject *__pyx_ptype_4mcdp_9exception_McdpIndexError = 0;
#define DpExc_IndexError (*__pyx_ptype_4mcdp_9exception_McdpIndexError)
static PyTypeObject *__pyx_ptype_4mcdp_9exception_McdpUnboundError = 0;
#define DpExc_UnboundError (*__pyx_ptype_4mcdp_9exception_McdpUnboundError)
#if !defined(__Pyx_PyIdentifier_FromString)
#if PY_MAJOR_VERSION < 3
  #define __Pyx_PyIdentifier_FromString(s) PyString_FromString(s)
#else
  #define __Pyx_PyIdentifier_FromString(s) PyUnicode_FromString(s)
#endif
#endif

#ifndef __PYX_HAVE_RT_ImportType_proto
#define __PYX_HAVE_RT_ImportType_proto
enum __Pyx_ImportType_CheckSize {
   __Pyx_ImportType_CheckSize_Error = 0,
   __Pyx_ImportType_CheckSize_Warn = 1,
   __Pyx_ImportType_CheckSize_Ignore = 2
};
static PyTypeObject *__Pyx_ImportType(PyObject* module, const char *module_name, const char *class_name, size_t size, enum __Pyx_ImportType_CheckSize check_size);
#endif

#ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(PyObject *module, const char *module_name, const char *class_name,
    size_t size, enum __Pyx_ImportType_CheckSize check_size)
{
    PyObject *result = 0;
    char warning[200];
    Py_ssize_t basicsize;
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject *py_basicsize;
#endif
    result = PyObject_GetAttrString(module, class_name);
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#if !CYTHON_COMPILING_IN_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if ((size_t)basicsize < size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        goto bad;
    }
    if (check_size == __Pyx_ImportType_CheckSize_Error && (size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        goto bad;
    }
    else if (check_size == __Pyx_ImportType_CheckSize_Warn && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(result);
    return NULL;
}
#endif


static int import_mcdp__exception(void) {
  PyObject *module = 0;
  module = PyImport_ImportModule("mcdp.exception");
  if (!module) goto bad;
  __pyx_ptype_4mcdp_9exception_McdpError = __Pyx_ImportType(module, "mcdp.exception", "McdpError", sizeof(struct McdpErrorObject), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_4mcdp_9exception_McdpError) goto bad;
  __pyx_ptype_4mcdp_9exception_McdpInitalizeError = __Pyx_ImportType(module, "mcdp.exception", "McdpInitalizeError", sizeof(struct McdpInitalizeErrorObject), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_4mcdp_9exception_McdpInitalizeError) goto bad;
  __pyx_ptype_4mcdp_9exception_McdpRuntimeError = __Pyx_ImportType(module, "mcdp.exception", "McdpRuntimeError", sizeof(struct McdpRuntimeErrorObject), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_4mcdp_9exception_McdpRuntimeError) goto bad;
  __pyx_ptype_4mcdp_9exception_McdpCompileError = __Pyx_ImportType(module, "mcdp.exception", "McdpCompileError", sizeof(struct McdpCompileErrorObject), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_4mcdp_9exception_McdpCompileError) goto bad;
  __pyx_ptype_4mcdp_9exception_McdpValueError = __Pyx_ImportType(module, "mcdp.exception", "McdpValueError", sizeof(struct McdpValueErrorObjet), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_4mcdp_9exception_McdpValueError) goto bad;
  __pyx_ptype_4mcdp_9exception_McdpTypeError = __Pyx_ImportType(module, "mcdp.exception", "McdpTypeError", sizeof(struct McdpTypeErrorObject), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_4mcdp_9exception_McdpTypeError) goto bad;
  __pyx_ptype_4mcdp_9exception_McdpIndexError = __Pyx_ImportType(module, "mcdp.exception", "McdpIndexError", sizeof(struct McdpIndexErrorObject), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_4mcdp_9exception_McdpIndexError) goto bad;
  __pyx_ptype_4mcdp_9exception_McdpUnboundError = __Pyx_ImportType(module, "mcdp.exception", "McdpUnboundError", sizeof(struct McdpUnboundErrorObject), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_4mcdp_9exception_McdpUnboundError) goto bad;
  Py_DECREF(module); module = 0;
  return 0;
  bad:
  Py_XDECREF(module);
  return -1;
}

#endif /* !__PYX_HAVE_API__mcdp__exception */
